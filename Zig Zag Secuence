¨¨¨
Given an array of -n- distinct integers, transform the array into a zig zag sequence by permuting the array elements. 
A sequence will be called a zig zag sequence if the first -k- elements in the sequence are in increasing order and the last -k- elements are in decreasing order,
where  k=(n+1)/2 .You need to find the lexicographically smallest zig zag sequence of the given array.
Example.
a=[2,3,5,1,4]
Now if we permute the array as , the result is a zig zag sequence.
[1,4,5,3,2)
¨¨¨
def findZigZagSequence(a, n):

    #a corresponde a la -lista- de los valores
    #n es la longitud de la -lista-
    
    #Se ordena la lista
    a.sort()
    
    #Se obtiene el valor medio de la lista y se le resta uno ya que el conteo empieza por el 0
    mid = int((n + 1)/2)-1
    
    #Se asigana mid a la lista como un valor entero
    a[mid], a[n-1] = a[n-1], a[mid]
    
    #Se crea una variable que se ocupara de ingresar los valores de la izquierda
    st = mid + 1
    #Se crea una variable que se ocupara de ingresar los valores de la derecha. Se le resta 2 ya que parte de 0
    ed = n - 2
    
    #El ciclo while se encargar de replazar los valores para que sea en Zig Zag
    while(st <= ed):
        a[st], a[ed] = a[ed], a[st]
        st = st + 1
        ed = ed - 1


    #Se inprime el arreglo en orden de zig zag
    for i in range (n):
        if i == n-1:
            print(a[i])
        else:
            print(a[i], end = ' ')
    return


#Se recibe una lista con valores enteros. La lista deve ser inpar y se puede recibir desordenada
test_cases = int(input())
for cs in range (test_cases):
    n = int(input())
    a = list(map(int, input().split()))
    findZigZagSequence(a, n)
